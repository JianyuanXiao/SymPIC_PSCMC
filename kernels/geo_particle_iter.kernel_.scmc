
(input-scmc "../general_macros.scmc")
;(include< "stdio.h")
(input-include "local_header.h")
(input-scmc "../simd_intrin_config.scmc")
(input-scmc "../particle_macros.scmc")
(eval-scmc-global
  (begin
    (load "../decscheme.ss")
    (load "../multi-map.ss") 
    (load "../Bproc_macros.scmc")
    ;(load "../rel.ss") 
    ;(defmacro floorx (x) (define tmpsym 'NEWSYM001_FLOORX) (define tmpsym-int 'NEWSYM001_FLOOR_INTX) `(block (define-double ,tmpsym ,x) (define-long ,tmpsym-int ,tmpsym) (if (< ,tmpsym ,tmpsym-int) (incf! ,tmpsym-int -1)) ,tmpsym-int))
    (define (gen_1st_dual_kernels gen_rel_name rel_vars)
      (begin-map
	(lambda (name rel_file addJ)
	  (gen_push_kernel name rel_vars
	    (kernel_gen_imifun rel_file addJ #f #t 'floor)
	    defJ01 IDX_LCL_SPEC_LEN
	    )
	  )
	(list 
	  (concat gen_rel_name '_fwd) 
	  (concat gen_rel_name '_bwd)
	  )
	`("../rel_fwd.ss" "../rel_bwd.ss")
	(list
	  INCFJ0_TREL_FWD
	  INCFJ0_TREL_BWD
	  )
	)
      )
    ;(load "../rel.ss")
    `(begin
       ,(if (and USE_INTRIN (isinlst RUNTIME '(C OpenMP COI)))
	  `(include< ,SIMD_HEADER)
	  '()
	  )
       (defun floorx int ((double x))
	 (define-int ax x)
	 (if (> ax x) (incf! ax -1))
	 ;(assert (<= ax x))
	 (return ax)
	 )
       ;,(gen_1st_dual_kernels_small_grid 'geo_rel_1st rel_vars_smallgrid)
       ,(gen_1st_dual_kernels 'geo_rel_1st rel_vars)
       )
    )
  )
